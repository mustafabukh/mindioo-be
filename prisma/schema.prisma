// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String
  password String
  userType UserType @default(VENDOR)
  profile  Profile?
  posts    Post[]
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}

model Profile {
  id           Int       @id @default(autoincrement())
  userId       Int       @unique
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  gender       Gender?
  firstName    String
  lastName     String
  bio          String
  birthdate    DateTime?
  address      Address?
  socialMedia  Links?
  coverPhoto   String?
  profilePhoto String?
}

model Links {
  id        Int     @id @default(autoincrement())
  facebook  String?
  youtube   String?
  twitter   String?
  instagram String?
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId Int  @unique 
}

model Address {
  id         Int     @id @default(autoincrement())
  street     String?
  city       String?
  state      String?
  country    String?
  postalCode String?
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId Int  @unique 
}

enum UserType {
  ADMIN
  CUSTOMER
  VENDOR
}

enum Gender {
  MALE
  FEMALE
}